generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Student {
  id             String       @id @default(uuid())
  dni            String       @unique
  names          String
  surnames       String
  email          String       @unique
  originSchoolId String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  originSchool   OriginSchool @relation(fields: [originSchoolId], references: [id])
  enrollments    Enrollment[]
}

model OriginSchool {
  id        String    @id @default(uuid())
  name      String
  city      String
  type      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  students  Student[]
}

model CareerOffered {
  id               String       @id @default(uuid())
  name             String
  originalCapacity Int
  currentCapacity  Int
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  enrollments      Enrollment[]
}

model Enrollment {
  id              String           @id @default(uuid())
  status          EnrollmentStatus @default(PENDING)
  enrollmentFee   Float
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  studentId       String
  careerOfferedId String
  student         Student          @relation(fields: [studentId], references: [id], onDelete: Cascade)
  careerOffered   CareerOffered    @relation(fields: [careerOfferedId], references: [id], onDelete: Cascade)

  @@unique([studentId, careerOfferedId])
}

enum EnrollmentStatus {
  PENDING
  APPROVED
  REJECTED
  CANCELLED
  COMPLETED
}
